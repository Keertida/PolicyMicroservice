// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolicyMicroservice.Models;

namespace PolicyMicroservice.Migrations
{
    [DbContext(typeof(InsureityPortalDatabaseContext))]
    [Migration("20220914051359_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PolicyMicroservice.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AgentId");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessMasterId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ConsumerID")
                        .HasColumnType("int");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("int");

                    b.HasKey("BusinessId");

                    b.HasIndex("BusinessMasterId");

                    b.HasIndex("ConsumerID");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.BusinessMaster", b =>
                {
                    b.Property<int>("BusinessMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessTurnOver")
                        .HasColumnType("int");

                    b.Property<int>("BusinessValue")
                        .HasColumnType("int");

                    b.Property<int>("CapitalInvest")
                        .HasColumnType("int");

                    b.HasKey("BusinessMasterId");

                    b.ToTable("BusinessMaster");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Consumer", b =>
                {
                    b.Property<int>("ConsumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PanNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ConsumerId");

                    b.HasIndex("AgentId");

                    b.ToTable("Consumer");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.ConsumerPolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PolicyMasterId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("PolicyId")
                        .HasName("PK__Consumer__2E1339A4567C4E44");

                    b.HasIndex("PolicyMasterId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("QuoteId");

                    b.ToTable("ConsumerPolicy");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PolicyMaster", b =>
                {
                    b.Property<int>("PolicyMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AssuredSum")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("BaseLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BusinesssValue")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PropertyValue")
                        .HasColumnType("int");

                    b.Property<int>("Tenure")
                        .HasColumnType("int");

                    b.HasKey("PolicyMasterId")
                        .HasName("PK__PolicyMa__2B2E4F00B7651340");

                    b.ToTable("PolicyMaster");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingAge")
                        .HasColumnType("int");

                    b.Property<int>("BuildingStoreys")
                        .HasColumnType("int");

                    b.Property<string>("BuildingType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyMasterId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("PropertyMasterId");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PropertyMaster", b =>
                {
                    b.Property<int>("PropertyMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostOfAssest")
                        .HasColumnType("int");

                    b.Property<int>("PropertyValue")
                        .HasColumnType("int");

                    b.Property<int>("SalvageValue")
                        .HasColumnType("int");

                    b.Property<int>("UsefulLifeOfAssest")
                        .HasColumnType("int");

                    b.HasKey("PropertyMasterId");

                    b.ToTable("PropertyMaster");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinesssValueFrom")
                        .HasColumnType("int");

                    b.Property<int>("BusinesssValueTo")
                        .HasColumnType("int");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PropertyValueFrom")
                        .HasColumnType("int");

                    b.Property<int>("PropertyValueTo")
                        .HasColumnType("int");

                    b.Property<decimal>("QuoteValue")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("QuoteId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.createpolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcceptedQuotes")
                        .HasColumnType("int");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyId");

                    b.ToTable("createpolicies");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Business", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.BusinessMaster", "BusinessMaster")
                        .WithMany("Businesses")
                        .HasForeignKey("BusinessMasterId")
                        .HasConstraintName("FK__Business__Busine__2D27B809")
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.Consumer", "Consumer")
                        .WithMany("Businesses")
                        .HasForeignKey("ConsumerID")
                        .HasConstraintName("FK__Business__Consum__2E1BDC42")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessMaster");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Consumer", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.Agent", "Agent")
                        .WithMany("Consumers")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK__Consumer__AgentI__267ABA7A")
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.ConsumerPolicy", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.PolicyMaster", "PolicyMaster")
                        .WithMany("ConsumerPolicies")
                        .HasForeignKey("PolicyMasterId")
                        .HasConstraintName("FK__ConsumerP__Polic__3A81B327")
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.Property", "Property")
                        .WithMany("ConsumerPolicies")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK__ConsumerP__Prope__38996AB5")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.Quote", "Quote")
                        .WithMany("ConsumerPolicies")
                        .HasForeignKey("QuoteId")
                        .HasConstraintName("FK__ConsumerP__Quote__398D8EEE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyMaster");

                    b.Navigation("Property");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Property", b =>
                {
                    b.HasOne("PolicyMicroservice.Models.Business", "Business")
                        .WithMany("Properties")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK__Property__Busine__30F848ED")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PolicyMicroservice.Models.PropertyMaster", "PropertyMaster")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyMasterId")
                        .HasConstraintName("FK__Property__Proper__31EC6D26")
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("PropertyMaster");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Agent", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Business", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.BusinessMaster", b =>
                {
                    b.Navigation("Businesses");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Consumer", b =>
                {
                    b.Navigation("Businesses");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PolicyMaster", b =>
                {
                    b.Navigation("ConsumerPolicies");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Property", b =>
                {
                    b.Navigation("ConsumerPolicies");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.PropertyMaster", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("PolicyMicroservice.Models.Quote", b =>
                {
                    b.Navigation("ConsumerPolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
